# ğŸ”¹ DESAFIO: Criando um Sistema de GestÃ£o de VeÃ­culos ğŸš—

# ğŸ“Œ Enunciado:
# A concessionÃ¡ria "Super Carros" deseja um sistema para gerenciar seu estoque de veÃ­culos
# utilizando ProgramaÃ§Ã£o Orientada a Objetos (POO). O sistema deve permitir o cadastro,
# listagem, ediÃ§Ã£o e remoÃ§Ã£o de veÃ­culos.
#
# O sistema deve funcionar da seguinte forma:
# 1. O usuÃ¡rio pode cadastrar um novo veÃ­culo informando:
#    - Marca
#    - Modelo
#    - Ano
#    - Tipo (Carro, Moto, CaminhÃ£o) *(se nenhum tipo for informado corretamente, o padrÃ£o serÃ¡ Carro)*.
# 2. O usuÃ¡rio pode visualizar a lista de veÃ­culos cadastrados.
# 3. O usuÃ¡rio pode editar os dados de um veÃ­culo existente.
# 4. O usuÃ¡rio pode remover um veÃ­culo pelo Ã­ndice da lista.
# 5. O sistema deve rodar em um loop atÃ© que o usuÃ¡rio escolha sair.

# âœ… Tarefa:
# - Criar uma classe `Veiculo` com atributos `marca`, `modelo` e `ano`.
# - Criar classes `Carro`, `Moto` e `Caminhao`, que herdam de `Veiculo` e adicionam um atributo `tipo`.
# - Criar uma classe `Concessionaria` que gerencia a lista de veÃ­culos.
# - Implementar mÃ©todos para cadastrar, listar, editar e remover veÃ­culos.
# - Criar um menu interativo para o usuÃ¡rio.
#
# ğŸ”¥ Dica:
# - Utilize listas para armazenar os veÃ­culos.
# - Use `input()` para interagir com o usuÃ¡rio.
# - Utilize heranÃ§a para diferenciar os tipos de veÃ­culos.
# - Certifique-se de tratar entradas invÃ¡lidas.

# Classe base Veiculo